name: Deploy to gh-pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      ZOLA_VERSION: 0.21.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Zola
        run: |
          curl -sL https://github.com/getzola/zola/releases/download/v${ZOLA_VERSION}/zola-v${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz | tar xz -C /usr/local/bin
          zola --version || { echo "Zola installation failed"; exit 1; }

      - name: Build with Zola
        run: |
          zola build
          if [ ! -d "public" ]; then
            echo "Error: public directory not found after zola build"
            exit 1
          fi
          ls -la public/ # Log contents of public directory for debugging
        env:
          BASE_URL: ${{ secrets.BASE_URL || 'https://<your-username>.github.io/<your-repo>' }}

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Initialize gh-pages branch if not exists
        run: |
          git fetch origin
          if ! git show-ref --quiet refs/remotes/origin/gh-pages; then
            echo "Creating gh-pages branch..."
            git checkout --orphan gh-pages
            git rm -rf .
            git commit --allow-empty -m "Initial gh-pages commit"
            git push origin gh-pages
            git checkout main
          else
            echo "gh-pages branch already exists"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to gh-pages
        run: |
          git worktree add gh-pages origin/gh-pages
          rm -rf gh-pages/*
          cp -r public/* gh-pages/ || { echo "Error: Failed to copy public/* to gh-pages"; exit 1; }
          cd gh-pages
          ls -la # Log contents of gh-pages for debugging
          git add .
          git commit -m "Deploy to gh-pages" || echo "No changes to commit"
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}